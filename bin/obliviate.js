#! /usr/bin/env node
/*! Copyright (c) 2016
 *  Marthem Obliviate v.0.1
 *  Author Michael Antonius (laguerdo@yahoo.com)
 *  Compiled with Obliviate Engine
 */
try{var userArgs=process.argv.slice(2),execFileSync=require("child_process").execFileSync,spawnSync=require("child_process").spawnSync,fs=require("fs"),path=require("path"),chokidar=require("chokidar"),color=require("node-colorify"),captureError="",config="./oblv.json";if("init"!=userArgs[0]){if(!fs.existsSync(config))throw new Error("[CLI Error] oblv.json couldn't be found");try{config=JSON.parse(fs.readFileSync(config,"utf8"))}catch(e){throw new Error("[oblv.json] Parse error: "+e.message)}}var oblv_exc=process.cwd(),normalize=function(e){return e.replace(oblv_exc,"").replace(/(\/|\\)/g,path.sep)},escapeRegExp=function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},reCache={},makeRe=function(e,r){var o=e+r;if(reCache[o])return reCache[o];var c=!1;"!"===e[0]&&(c=!0,e=e.slice(1)),e=escapeRegExp(e).replace(/\\\*/g,".*"),/(\/|\\)/.test(e.slice(-2))&&(e=e.slice(0,-2)),c&&r&&(e="(?!"+e+")");var i=new RegExp("^"+e+"$","i");return i.negated=c,reCache[o]=i,i},exclude=config.exclude;switch(typeof exclude){case"string":exclude=[exclude];break;case"number":exclude=[exclude+""];break;case"object":break;default:exclude=[]}exclude.push("/oblv.json"),exclude.forEach(function(e,r){exclude[r]=makeRe(normalize(e))});var compileProject=function(e){if(captureError=spawnSync(path.basename(config["php-cli"]),["-l",e],{cwd:path.dirname(config["php-cli"])}),captureError=(captureError.stdout+"").trim(),/^Parse error/i.test(captureError))fs.createReadStream(e).pipe(fs.createWriteStream(e.replace(/\.oblv\.php$/,".php"))),console.error("[PHP] "+captureError);else try{execFileSync(config["php-cli"],["-f",__dirname+"/obliviate.php",e,e.replace(/\.oblv\.php$/,".php")])}catch(r){throw new Error("[Internal error] "+r.message)}captureError=""},readLine=function(e){return win32=function(){return"win32"===process.platform},readSync=function(e){var r=win32()?process.stdin.fd:fs.openSync("/dev/stdin","rs"),o=fs.readSync(r,e,0,e.length);return win32()||fs.closeSync(r),o},e=e||"",function(r){try{return process.stdout.write(e),r.toString(null,0,readSync(r))}catch(o){throw o}}(new Buffer(256))};if(userArgs.length>0)switch(userArgs[0].toLowerCase()){case"auto":try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw new Error("[CLI Error] A valid PHP Executable needed")}console.log("Searching for *.oblv.php files ...");var glob=require("glob-all"),auto_search=glob.sync([oblv_exc+"/**/*.oblv.php"]);console.log(color.styleItSync("Watching ...",["bold"]));var fired={},crypto=require("crypto"),wildcard={},key=0;auto_search.forEach(function(e){var r=crypto.createHash("md5").update(e).digest("hex");if(void 0==wildcard[r]){wildcard[r]=!0;var o=chokidar.watch(e);o.on("change",function(e){var r=crypto.createHash("md5").update(e).digest("hex");if(void 0==fired[r])fired[r]={time:Date.now(),count:1};else{if(!(Date.now()-fired[r].time>500))return;fired[r].time=Date.now(),fired[r].count=fired[r].count+1}if(captureError=spawnSync(path.basename(config["php-cli"]),["-l",e],{cwd:path.dirname(config["php-cli"])}),captureError=(captureError.stdout+"").trim(),console.log(color.colorItSync(e,{fColor:"green"})+" changed. Compiling ..."),/^Parse error/i.test(captureError))fs.createReadStream(e).pipe(fs.createWriteStream(e.replace(/\.oblv\.php$/,".php"))),console.error(color.colorItSync("[PHP] "+captureError,{bColor:"red",fColor:"white"}));else try{execFileSync(config["php-cli"],["-f",__dirname+"/obliviate.php",e,e.replace(/\.oblv\.php$/,".php")]),console.log("Compiled")}catch(o){throw new Error("[Internal error] "+o.message)}captureError="",void 0==fired[r]&&fired[r].count>3&&delete fired[r]})}});break;case"compile":try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw new Error("[CLI Error] A valid PHP Executable needed")}var glob=require("glob-all"),auto_search=glob.sync([oblv_exc+"/**/*.oblv.php"]);console.log("Searching for *.oblv.php files ..."),auto_search.forEach(function(e){compileProject(e)}),console.log("Obliviate succesfully compiled your project");break;case"init":var load_config="./oblv.json",run=!0,oblv_init=function(e){try{var r=fs.existsSync(load_config)?JSON.parse(fs.readFileSync(load_config,"utf8")):{},o="";o=readLine("Enter a valid {PHP} Executable File path: ")+"",o=o.trim();try{execFileSync(o,["-r",'echo "obliviate";']),r["php-cli"]=o,fs.writeFileSync("./oblv.json",JSON.stringify(r,null,1)),e=!1}catch(c){console.log(color.colorItSync(o+" isn't a valid PHP Executable File",{bColor:"red",fColor:"white"})),oblv_init()}}catch(c){var r={};try{var o="";o=readLine("Enter a valid {PHP} Executable File path: "),o=o.trim(),execFileSync(o,["-r",'echo "obliviate";']),r["php-cli"]=o,fs.writeFileSync("./oblv.json",JSON.stringify(r,null,1))}catch(c){console.error(color.colorItSync(o+" isn't a valid PHP Executable File",{bColor:"red",fColor:"white"})),oblv_init()}}};oblv_init();break;default:console.log("Use `oblv init` to initialize and `oblv compile` to compile your project")}else{try{execFileSync(config["php-cli"],["-r",'echo "obliviate";'])}catch(e){throw new Error("[CLI Error] A valid PHP Executable needed")}compileProject(oblv_exc,oblv_exc),console.log("Obliviate succesfully compiled your project")}}catch(err){console.log(err.message)}